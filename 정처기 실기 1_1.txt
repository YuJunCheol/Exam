요구사항 확인
1. 현행시스템 분석.
	1) 현행시스템 파악 개념.
		현행 시스템이 어떤 하위시스템으로 구성되어있고 어떤 기능, 연계 정보, 기술 요소 를 사용하는지 파악
		사용하고 있는 소프트웨어 및 하드웨어 네트워크 구성은 어떻게 되어있는지 파악하는 활동.
		1. 현행 시스템 파악 절차
			- 구성/기능/인터페이스 파악 (1단계)
			- 아키텍처 및 소프트웨어 구성 파악 (2단계)
			- 하드웨어 및 네트워크 파악 (3단계)
		현행 시스템 구성 현황 파악
			- 기간 업무와 지원업무로 구분하여 파악 : 정보 시스템들의 명칭, 주요 기능들을 명시.
			- 조직 내 존재하는 모든 정보시스템을 파악
		현행 시스템 기능 파악
			- 단위업무 시스템이 제공하는 기능파악 : 주요기능과 하부 기능으로 구분하여 계층형으로 파악.
		현행 시스템 인터페이스 파악
			- 단위업무 시스템이 다른 시스템과 주고받는 데이터의 종류, 형식, 프로토콜,연계유형,주기 파악
			: 데이터형식(XML, 고정포매스 가변포맷), 통신규약(TCP/IP,X.25), 연계 유형(EAI)은 무엇인지 표시.
===
		현행시스템 아키텍처 구성 파악 
			- 기간 업무를 수행하기위하여 계층별로 어떤 기술 요소를 사용하는지 최상위 수준에서 파악  
			: 단위 업무 시스템별로 아키텍처가 다른경우 주요기능의 아키텍처를 파악.
		소프트웨어 구성 파악
			- 설치되어있는 소프트웨어의 제품명, 용도, 라이선스 적용방식, 라이선스 수, 파악.
			: 상용 소프트웨어의 경우 라이선스 적용방식과 보유한 라이선스 수 파악.
==		
		하드웨어 구성 파악
			- 서버의 주요 사양(cpu 등)과 수량 이중화 구현 여부 파악.
			: 이중화는 기간업무의 서비스 기간, 장애 대응 정책에 따라 필요성 여부가 결정되며,
			  이에 따라 이느라 구축 기술 난이도 및 비용증가 가능성 존재
		네트워크 구성 파악
			- 어떤 처리 시스템을 위해 어떤 네트워크 장비를 사용하였는지 어떻게 구성되어 있는지 파악.
			: 서버의 위치, 서버간 네트워크 연결 방식 파악.

	2) 소프트웨어 아키텍쳐 : - 소프트웨어의 구성요소와 그 구성요소가 가진 특성중 외부에 드러나는 특성 구성요소 간의
				관계를 표현하는 시스템의 궂나 구조체.
			       -소프트웨어를 설계하고 전개 하기위한 지침이나 원칙.
		1 소프트웨어 아키텍쳐 프레임워크
			: 아키텍쳐가 표현해야하는 내용 및 이들간의 관계를 제공하는 아키텍쳐 표준.
		2. 소프트웨어 아키텍쳐 프레임 워크 구성요소
			아키텍쳐 명세서
			이해관계자
			관심사
			관점
			뷰
			근거
		3. 소프트웨어 아키텍쳐 4+1 뷰
			유스케이스 뷰 : 아키텍쳐 도출 설계 주관
			논리뷰 : 시스템의 기능적 요구사항
			프로세스뷰 : 런타임, 스레드, 프로세스와 이들사이의 상호작용
			구현뷰 : 정적인 소프트웨어 모듈의 구성을 표현, 컴포넌트 뷰라고도 함.
			배포뷰 : 물리적 노드의 구성과 상호 연결 관계를 배포 다이어그램으로 표현
		